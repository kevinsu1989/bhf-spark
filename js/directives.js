// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  define(['./ng-module', './utils', '_', 't!/views/global-all.html', 't!/views/project/all.html', 'pkg/datetime/datetimepicker', 'plugin/jquery.honey.simple-tab'], function(_module, _utils, _, _template, _directiveTmp) {
    return _module.directiveModule.directive('dropdown', function() {
      return {
        restrict: 'A',
        replace: true,
        link: function(scope, element, attrs) {
          var $menus, $self, $text;
          $self = $(element);
          $menus = $self.find('div.dropdown');
          $text = $self.find(attrs.textContainer);
          $menus.bind('mouseleave', function() {
            return $menus.fadeOut();
          });
          $self.bind('click', function() {
            return $menus.fadeIn();
          });
          attrs.$observe('selected', function() {
            var $current, selected;
            if (!scope.items) {
              return;
            }
            selected = attrs.selected || -1;
            $current = $menus.find("a[data-value='" + selected + "']");
            return $text.text($current.text());
          });
          return $menus.bind('click', function(e) {
            var $parent, $this, value;
            e.stopPropagation();
            $this = $(e.target);
            $parent = $this.closest('a');
            $menus.fadeOut();
            value = $parent.attr('data-value');
            if (!value) {
              return;
            }
            $text.text($parent.text());
            return scope.$emit('dropdown:selected', attrs.name, value);
          });
        }
      };
    }).directive('datetimePicker', function() {
      return {
        restrict: 'AC',
        link: function(scope, element, attrs) {
          var $this, dateOpt, dateTimeOpt, formart, name, timeOpt, type;
          dateOpt = {
            format: 'yyyy-MM-dd',
            startView: 2,
            minView: 2
          };
          timeOpt = {
            format: 'hh:mm:ss',
            startView: 1,
            minView: 0,
            maxView: 1
          };
          dateTimeOpt = {
            format: 'yyyy-MM-dd HH:mm:ss',
            startView: 2
          };
          name = attrs.name;
          type = attrs.type;
          formart = attrs.formart;
          switch (type) {
            case 'time':
              dateOpt = timeOpt;
              break;
            case 'datetime':
              dateOpt = dateTimeOpt;
          }
          dateOpt.showMeridian = true;
          if (formart) {
            dateOpt.formart = formart;
          }
          $this = $(element);
          $this.datetimepicker(dateOpt);
          return $this.on('changeDate', function(ev) {
            return scope.$emit('datetime:change', name, ev.date.valueOf());
          });
        }
      };
    }).directive('gitListEditor', function() {
      return {
        restrict: 'E',
        replace: true,
        template: _utils.extractTemplate('#tmpl-global-git-list', _template),
        link: function(scope, element, attrs) {}
      };
    }).directive('simpleTab', function() {
      return {
        restrict: 'A',
        replace: false,
        link: function(scope, element, attrs) {
          var $o;
          $o = $(element).simpleTab();
          return attrs.$observe('activeIndex', function() {
            return $o.simpleTab('change', parseInt(attrs.activeIndex));
          });
        }
      };
    });
  });

}).call(this);

//# sourceMappingURL=directives.map
